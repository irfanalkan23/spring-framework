#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.username=sa
#spring.datasource.password=
#
#spring.datasource.driver-class-name=org.h2.Driver
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#
##iot see in the console what sql query is JPA running. we don't use in production.
#spring.jpa.show-sql=true
#
##localhost:8080/h2-console
#spring.h2.console.path=/h2-console
#spring.h2.console.enabled=true

#PostgreSQL Connection
#connection stream: url, username, password
spring.datasource.url=jdbc:postgresql://localhost:5432/cydeo
spring.datasource.username=postgres
spring.datasource.password=4223

spring.jpa.show-sql=true

spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

#iot use schema2.sql and data.sql :
#spring.sql.init.mode=always

#iot create table with hibernate (@Entity, object mapping):
spring.jpa.hibernate.ddl-auto=create
#create--> drop the existing, then create
#update--> update the existing table

spring.jpa.defer-datasource-initialization=true